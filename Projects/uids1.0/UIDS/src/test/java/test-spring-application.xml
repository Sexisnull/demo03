<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans.xsd   
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context.xsd  
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/task 
    http://www.springframework.org/schema/task/spring-task.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<!-- 读取资源文件 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
 		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="com.gsww" />
	
	<!-- 隐式地向 Spring 容器注册 -->
	<context:annotation-config />

	<!-- 标注类型 的事务配置 -->
	<tx:annotation-driven />
	
	<!--登录页面校验码配置 使用com.google.code.kaptcha -->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<prop key="kaptcha.border">no</prop>
						<prop key="kaptcha.border.color">105,179,90</prop>
						<prop key="kaptcha.textproducer.font.color">blue</prop>
						<prop key="kaptcha.textproducer.font.size">30</prop>
						<prop key="kaptcha.textproducer.char.space">10</prop>
						<prop key="kaptcha.session.key">code</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.NoNoise</prop>
						<prop key="kaptcha.image.width">144</prop>
						<prop key="kaptcha.image.height">38</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>
	
	<!-- 实名认证util -->
	<bean id="verifyUtil" class="com.gsww.common.util.AuthenticatePersonalRealNameUtil" factory-method="getInstance" >
	</bean>
	
	<!-- 短信验证util -->
	<bean id="smsUtil" class="com.gsww.common.util.SmsUtil" factory-method="getInstance" >
	</bean>

	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="url" value="${jdbc.url}"></property>
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="maxActive" value="20" />
		<property name="initialSize" value="1" />
	</bean>
	
	<!-- 整合hibernate -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" >
		<property name="dataSource"><ref bean="dataSource" /></property>
		<property name="packagesToScan">
			<list>
				<value>com.gsww</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQL5Dialect
					<!-- 
					org.hibernate.dialect.Oracle10gDialect
					-->
				</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
			</props>
		</property>
	</bean>

	<!-- hibernate事物配置 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	<!-- 开启通过注解@Transactional管理事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="false"/>
    
    <!-- 事务 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true" propagation="REQUIRED" />
            <tx:method name="find*" read-only="true" propagation="REQUIRED" />
            <tx:method name="query*" read-only="true" propagation="REQUIRED" />
            <tx:method name="*" propagation="REQUIRED" />
        </tx:attributes>
    </tx:advice>

    <!-- spring AOP 管理事务 -->
	<aop:config>
		<aop:pointcut expression="execution(public * com.gsww.uids.manager..impl.*.*(..))" id="pointcut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
	</aop:config>
    
	<import resource="classpath:spring-config-cache.xml"/>
	<import resource="classpath:spring-config-shiro.xml"/>
	<import resource="classpath:spring-config-log.xml"/>
	
</beans>